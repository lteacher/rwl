<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:vw="clr-namespace:RobotInitial.View"
    xmlns:vm="clr-namespace:RobotInitial.ViewModel"
    xmlns:c="clr-namespace:RobotInitial.Controls"
    xmlns:e="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:b="clr-namespace:RobotInitial.Behaviours"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
    >
    
    <!--
    This Template applies a WorkspaceView to an instance
    of the WorkspaceViewModel class.
    -->
    <DataTemplate DataType="{x:Type vm:WorkspaceViewModel}">
        <vw:WorkspaceView />
    </DataTemplate>

    <!--
    <DataTemplate DataType="{x:Type vm:PropertiesViewModel}">
        <vw:PropertiesTabView />
    </DataTemplate>
    -->

    <DataTemplate DataType="{x:Type vm:TaskBlockTabViewModel}">
        <vw:TaskBlockTabView />
    </DataTemplate>
    
    <!--
    This is the style block moved from MainWindow.xaml
    -->
    <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle Fill="#FFF4F4F5" RadiusY="17.5" RadiusX="17.5" Stroke="Black">
                            <Rectangle.Effect>
                                <DropShadowEffect Direction="125" BlurRadius="10" ShadowDepth="2"/>
                            </Rectangle.Effect>
                        </Rectangle>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--
    CloseableTabItem Template
    -->
    <DataTemplate x:Key="CloseableTabItemTemplate">
        <DockPanel Width="80">
            <Button
                Command="{Binding DataContext.CloseWorkspaceCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type vw:MainWindowView}}}"
                Content="X"
                Cursor="Hand"
                DockPanel.Dock="Right"
                Focusable="False"
                FontFamily="Comic Sans MS"
                FontSize="9"
                FontWeight="Bold"
                Margin="0,1,0,0"
                Padding="0"
                VerticalContentAlignment="Bottom"
                Width="16" Height="16"/>
            <ContentPresenter 
                Content="{Binding DataContext.ActiveWorkspaceViewModel.DisplayName, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type vw:MainWindowView}}}"
                VerticalAlignment="Center"
                TextBlock.FontFamily="Comic Sans MS"
                />
        </DockPanel>
    </DataTemplate>

    <DataTemplate x:Key="BrickTabItemTemplate">
        <ContentPresenter 
                Content="{Binding DisplayName}" 
                VerticalAlignment="Center"
                />
    </DataTemplate>
    <!-- 
    BrickTab Template
    
    Container of the Brick Selection Tabs
    -->
    <DataTemplate x:Key="BrickTabTemplate">
        <TabControl 
            IsSynchronizedWithCurrentItem="True"
            ItemsSource="{Binding}"
            ItemTemplate="{StaticResource BrickTabItemTemplate}"
            HorizontalAlignment="Left"
            Width="104" 
            Margin="1,2,0,0" 
            TabStripPlacement="Bottom"
            />
    </DataTemplate>
	
    <!-- Create the style for the Movement Task Block-->
	<Style x:Key="MoveStyle" TargetType="{x:Type c:TaskBlockItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:TaskBlockItem}">
                	<Grid>
	                	<Rectangle Height="59" Width="59" Fill="Green" StrokeThickness="1" RadiusX="18" RadiusY="18" Stroke="Black"/>
       					<Rectangle Height="75" Width="75" Opacity="0.18" Stroke="Black" RadiusX="24.5" RadiusY="24.5" StrokeThickness="8"/>
                		<TextBlock Margin="0" TextWrapping="Wrap" Text="MOVE" VerticalAlignment="Center" FontFamily="Comic Sans MS" d:LayoutOverrides="Height" HorizontalAlignment="Center" FontWeight="Bold"/>
					</Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
	</Style>

    <!-- Create the style for the Loop Task Block-->
    <Style x:Key="LoopStyle" TargetType="{x:Type c:TaskBlockItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:TaskBlockItem}">
                    <Grid>
                		<Rectangle Height="59" Width="59" Fill="LightSkyBlue" StrokeThickness="1" RadiusX="18" RadiusY="18" Stroke="Black"/>
       					<Rectangle Height="75" Width="75" Opacity="0.18" Stroke="Black" RadiusX="24.5" RadiusY="24.5" StrokeThickness="8"/>
                		<TextBlock Margin="0" TextWrapping="Wrap" Text="LOOP" VerticalAlignment="Center" FontFamily="Comic Sans MS" d:LayoutOverrides="Height" HorizontalAlignment="Center" FontWeight="Bold"/>
                	</Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Create the style for the Switch Task Block-->
    <Style x:Key="SwitchStyle" TargetType="{x:Type c:TaskBlockItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:TaskBlockItem}">
                    <Grid>
                		<Rectangle Height="59" Width="59" Fill="Yellow" StrokeThickness="1" RadiusX="18" RadiusY="18" Stroke="Black"/>
       					<Rectangle Height="75" Width="75" Opacity="0.18" Stroke="Black" RadiusX="24.5" RadiusY="24.5" StrokeThickness="8"/>
                		<TextBlock Margin="0" TextWrapping="Wrap" Text="SWITCH" VerticalAlignment="Center" FontFamily="Comic Sans MS" d:LayoutOverrides="Height" HorizontalAlignment="Center" FontWeight="Bold"/>
                	</Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Create the style for the Wait Task Block-->
    <Style x:Key="WaitStyle" TargetType="{x:Type c:TaskBlockItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:TaskBlockItem}">
                    <Grid>
                		<Rectangle Height="59" Width="59" Fill="Red" StrokeThickness="1" RadiusX="18" RadiusY="18" Stroke="Black"/>
       					<Rectangle Height="75" Width="75" Opacity="0.18" Stroke="Black" RadiusX="24.5" RadiusY="24.5" StrokeThickness="8"/>
                		<TextBlock Margin="0" TextWrapping="Wrap" Text="WAIT" VerticalAlignment="Center" FontFamily="Comic Sans MS" d:LayoutOverrides="Height" HorizontalAlignment="Center" FontWeight="Bold"/>
                	</Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>